void Main()
{   
    var result = 0;          
    Action<Action> repeat = (f) => Enumerable.Range(0, 1000000).ToList().ForEach(_=> f());
    var incrementTask = Task.Run(()=>repeat(() => result++));           
    var decrementTask = Task.Run(()=>repeat(() => result--));
         
    incrementTask.Wait();   
    decrementTask.Wait();   
    result.Dump();
    
    //what should be done in program to pass this test? Do not change the row order ;)
    result.ShouldEqual(0);
    
}


------------------------------------------------------

void Main()

{   

    var result = 0;          

    Action<Action> repeat = (f) => Enumerable.Range(0, 1000000).ToList().ForEach(_=> f());

    var incrementTask = Task.Run(()=>repeat(() => Interlocked.Increment(ref result)));           

    var decrementTask = Task.Run(()=>repeat(() => Interlocked.Decrement(ref result)));

         

    incrementTask.Wait();   

    decrementTask.Wait();   

    result.Dump(); // 0

}


	
------------------------------------------------------
	
	
